// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: vote_contract.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using aelf = global::AElf.Types.CSharp;

namespace Contract {

  #region Events
  #endregion
  public static partial class VoteContractContainer
  {
    static readonly string __ServiceName = "vote.VoteContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::Contract.InitializeInput> __Marshaller_vote_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Contract.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Common.Address> __Marshaller_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Common.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.UInt32Value> __Marshaller_google_protobuf_UInt32Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.UInt32Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Contract.Proposal> __Marshaller_vote_Proposal = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Contract.Proposal.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::Contract.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::Contract.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_vote_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Common.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_GiveRightToVote = new aelf::Method<global::AElf.Common.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "GiveRightToVote",
        __Marshaller_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Common.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Delegate = new aelf::Method<global::AElf.Common.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Delegate",
        __Marshaller_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.UInt32Value, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Vote = new aelf::Method<global::Google.Protobuf.WellKnownTypes.UInt32Value, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Vote",
        __Marshaller_google_protobuf_UInt32Value,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Contract.Proposal> __Method_GetWinningProposal = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Contract.Proposal>(
        aelf::MethodType.View,
        __ServiceName,
        "GetWinningProposal",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_vote_Proposal);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Common.Address> __Method_GetChainperson = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Common.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetChainperson",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_Address);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Contract.VoteContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::Contract.VoteContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of VoteContract</summary>
    public abstract partial class VoteContractBase : AElf.Sdk.CSharp.CSharpSmartContract<Contract.VoteState>
    {
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::Contract.InitializeInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty GiveRightToVote(global::AElf.Common.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Delegate(global::AElf.Common.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Vote(global::Google.Protobuf.WellKnownTypes.UInt32Value input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Contract.Proposal GetWinningProposal(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Common.Address GetChainperson(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(VoteContractBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_Initialize, serviceImpl.Initialize)
          .AddMethod(__Method_GiveRightToVote, serviceImpl.GiveRightToVote)
          .AddMethod(__Method_Delegate, serviceImpl.Delegate)
          .AddMethod(__Method_Vote, serviceImpl.Vote)
          .AddMethod(__Method_GetWinningProposal, serviceImpl.GetWinningProposal)
          .AddMethod(__Method_GetChainperson, serviceImpl.GetChainperson).Build();
    }

  }
}
#endregion

