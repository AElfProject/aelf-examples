syntax = "proto3";

package ballot;

import "aelf_options.proto";
import "common.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "Ballot";

service Ballot {
    option (aelf.csharp_state) = "BallotState";
    // Actions
    rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {
    }
    rpc GiveRightToVote (Address) returns (google.protobuf.Empty) {
    }
    rpc Delegate (Address) returns (google.protobuf.Empty) {
    }
    rpc Vote (google.protobuf.UInt32Value) returns (google.protobuf.Empty) {
    }
    // Views
    // Solidity - Original
    rpc GetWinningProposal (google.protobuf.Empty) returns (Proposal) {
        option (aelf.is_view) = true;
    }
    // Added by us
    rpc GetChainPerson (google.protobuf.Empty) returns (Address) {
        option (aelf.is_view) = true;
    }
    rpc GetProposals (google.protobuf.Empty) returns (ProposalsData) {
        option (aelf.is_view) = true;
    }
}

message InitializeInput {
    repeated string proposal_names = 1;
}

message Voter {
    uint32 weight = 1;
    bool voted = 2;
    Address delegate = 3;
    uint32 vote = 4;
}

message Proposal {
    string name = 1;
    uint32 vote_count = 2;
}

message ProposalsData {
    repeated Proposal proposals = 1;
}
